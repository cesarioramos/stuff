
apply plugin: 'java'

apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'jetty'
apply plugin: 'checkstyle'

httpPort = 8888

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

	def tomcat_version = '7.0.57'
	
	checkstyle {
		toolVersion = "6.12"
	}

	repositories {
	    mavenCentral()
	}
	repositories { 
		jcenter() 
		}

	dependencies { 
		testCompile "org.mockito:mockito-core:1.+"
	}

	dependencies {
	    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: tomcat_version
	    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-logging-juli', version: tomcat_version
	    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: tomcat_version
	    compile group: 'org.apache.tomcat', name: 'tomcat-jasper', version: tomcat_version
	    compile group: 'org.apache.tomcat', name: 'tomcat-jasper-el', version: tomcat_version
	    compile group: 'org.apache.tomcat', name: 'tomcat-jsp-api', version: tomcat_version
	    compile group: 'jstl', name: 'jstl', version: '1.2'
	    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.2.2'
	    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'	 
	    	    
	    testCompile group: 'junit', name: 'junit', version: '4.+'
	    testCompile 'org.assertj:assertj-core:3.3.0'
	    testCompile group: 'com.github.fakemongo', name: 'fongo', version: '2.0.4'
	}

	test {
    	testLogging {
        		events "failed"
        		exceptionFormat "short"
    	}
	}
	
		task unitTest(type: Test)  {
			useJUnit {
				includeCategories 'tests.UnitTest'
			}
    	
    	testLogging {
        		events "failed"
        		exceptionFormat "short"
    	}
	}
	
	
	task intTest(type: Test)  {
			useJUnit {
				includeCategories 'tests.IntegrationTest'
			}
    	
    	testLogging {
        		events "failed"
        		exceptionFormat "short"
    	}
	}
			
	
/*	task checkstyleHtmlMain << {
    ant.xslt(in: "$buildDir/reports/checkstyle/main.xml",
             style: file("${rootDir}/config/checkstyle-noframes-sorted.xsl"),
             out: new File(checkstyleMain.reports.xml.destination.parent, 'main.html'))
	}
	
	task checkstyleHtmTest << {
    ant.xslt(in: "$buildDir/reports/checkstyle/test.xml",
             style: file("${rootDir}/config/checkstyle-noframes-sorted.xsl"),
             out: new File(checkstyleMain.reports.xml.destination.parent, 'test.html'))
	}
	
	version = '1.0'

	checkstyleMain.finalizedBy checkstyleHtmlMain
	checkstyleTest.finalizedBy checkstyleHtmTest 
*/
